@model ML.Cine
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Formulario</h1>
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Form", "Cine", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
            <div class="form-horizontal">
                 <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.IdCine, new { @class = "visually-hidden" })
                        @Html.TextBoxFor(model => model.IdCine, new { @class = "visually-hidden" })
                        @Html.ValidationMessageFor(model => model.IdCine)
                        @*hidden*@
                    </div>
                 </div>
              
             <div class="row">
                  <div class="col-md-2">
                            @Html.LabelFor(model => model.Longitud)
                            <div class="input-group mb-2">
                                <span class="input-group-text" ><i class="bi bi-geo-fill"></i></span>
                                @Html.TextBoxFor(model => model.Longitud, new { @class = "form-control", @id = "txtLongitud", @readonly = "readonly"})
                                @Html.ValidationMessageFor(model => model.Longitud)
                            </div>
                </div>
                       <div class="col-md-2">
                            @Html.LabelFor(model => model.Latitud)
                            <div class="input-group mb-2">
                                <span class="input-group-text" ><i class="bi bi-geo-alt"></i></span>
                                @Html.TextBoxFor(model => model.Latitud, new { @class = "form-control", @id = "txtLatitud" , @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.Latitud)
                            </div>
                        </div>
                         
                         <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion)
                            <div class="input-group mb-2">
                                <span class="input-group-text" ><i class="bi bi-geo-fill"></i></span>
                                @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @id = "txtDireccion" })
                                @Html.ValidationMessageFor(model => model.Direccion)
                            </div>
                        </div>
                           <div class="col-md-2">
                            @Html.LabelFor(model => model.Venta)
                            <div class="input-group mb-2">
                                <span class="input-group-text" ><i class="bi bi-currency-exchange"></i></span>
                                @Html.TextBoxFor(model => model.Venta, new { @class = "form-control", @id = "txtVenta" })
                                @Html.ValidationMessageFor(model => model.Venta)
                            </div>
                        </div>
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Zona.Zonas)
                                <div class="input-group mb-2">
                                    <span class="input-group-text" >  <i class="bi bi-briefcase-fill"></i></span>
                                  @Html.DropDownListFor(model => model.Zona.IdZona, new SelectList(Model.Zona.Zonas, "IdZona", "Nombre"), "Selecciona una zona", new { @class = "form-control" })
                                </div>
                            </div>
                      
                 
             </div>
                          <div class="row">
                             <div class=""style="float:right">
                                    <div class="col-md-4">
                                        <input type="submit" value="Guardar" class="btn btn-success" />
                                        @Html.ActionLink("Regresar", "GetAll", "Cine", htmlAttributes: new { @class = "btn btn-danger" })
                                    </div>
                                </div>
                            </div>
           </div>
                
           }
       </div>
</div>

    <div id="map"></div>
   
  <script async  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw&callback=initMap"></script>
  
@section scripts{
 
<script type="text/javascript">
function initMap() {
    // The location of Uluru
    const uluru = { lat: 19.430437, lng: -99.161288 };
    // The map, centered at Uluru
    const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 14,
        center: uluru,
    });
    // Create the initial InfoWindow.
    let infoWindow = new google.maps.InfoWindow({
        content: "Selecciona cualquier parte del mapa para obtener tu lat y long",
        position: uluru,
    });

    infoWindow.open(map);
    //obtener direccion 
                google.maps.event.addListener(map, 'click', function (event) {
                    var geocoder = new google.maps.Geocoder();
                    geocoder.geocode({
                        'latLng': event.latLng
                    }, function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            if (results[0]) {
                                $("#txtDireccion").val(results[0].formatted_address);
                            }
                        }
                    }); 
                });
   
    // Configure the click listener.
    map.addListener("click", (mapsMouseEvent) => {
        // Close the current InfoWindow.
        infoWindow.close();
        // Create a new InfoWindow.
        infoWindow = new google.maps.InfoWindow({
            position: mapsMouseEvent.latLng,
        });
        infoWindow.setContent(
            JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2)
        );
        infoWindow.open(map);
        var Latitud = mapsMouseEvent.latLng.lat();
        var Longitud = mapsMouseEvent.latLng.lng();
        $("#txtLatitud").val(Latitud);
        $("#txtLongitud").val(Longitud);
    });
    
        
}
    window.initMap = initMap;

</script>
 
}



          
                 



